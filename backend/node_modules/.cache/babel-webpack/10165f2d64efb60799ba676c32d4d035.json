{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { mimeType } from \"./mime-type.validator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../posts.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/auth/auth.service\";\nimport * as i4 from \"@angular/material/card\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/progress-spinner\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/button\";\n\nfunction PostCreateComponent_mat_spinner_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\");\n  }\n}\n\nfunction PostCreateComponent_form_4_mat_error_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Please enter a post title\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PostCreateComponent_form_4_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵelement(1, \"img\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", ctx_r4.imagePreview, i0.ɵɵsanitizeUrl)(\"alt\", ctx_r4.form.value.title);\n  }\n}\n\nfunction PostCreateComponent_form_4_mat_error_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Please enter some content\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PostCreateComponent_form_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 2);\n    i0.ɵɵlistener(\"submit\", function PostCreateComponent_form_4_Template_form_submit_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.onSavePost();\n    });\n    i0.ɵɵelementStart(1, \"mat-form-field\");\n    i0.ɵɵelement(2, \"input\", 3);\n    i0.ɵɵtemplate(3, PostCreateComponent_form_4_mat_error_3_Template, 2, 0, \"mat-error\", 0);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\");\n    i0.ɵɵelementStart(5, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function PostCreateComponent_form_4_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r7);\n\n      const _r3 = i0.ɵɵreference(8);\n\n      return _r3.click();\n    });\n    i0.ɵɵtext(6, \"Select Image\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"input\", 5, 6);\n    i0.ɵɵlistener(\"change\", function PostCreateComponent_form_4_Template_input_change_7_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.onImagePicked($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(9, PostCreateComponent_form_4_div_9_Template, 2, 2, \"div\", 7);\n    i0.ɵɵelementStart(10, \"mat-form-field\");\n    i0.ɵɵelement(11, \"textarea\", 8);\n    i0.ɵɵtemplate(12, PostCreateComponent_form_4_mat_error_12_Template, 2, 0, \"mat-error\", 0);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"button\", 9);\n    i0.ɵɵtext(14, \"Save Post\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.form);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.form.get(\"title\").invalid);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.imagePreview !== \"\" && ctx_r1.imagePreview && ctx_r1.form.get(\"image\").valid);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.form.get(\"content\").invalid);\n  }\n}\n\nexport class PostCreateComponent {\n  constructor(postsService, route, authService) {\n    this.postsService = postsService;\n    this.route = route;\n    this.authService = authService;\n    this.enteredTitle = \"\";\n    this.enteredContent = \"\";\n    this.mode = 'create';\n    this.isLoading = false;\n  }\n\n  ngOnInit() {\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(authStatus => {\n      this.isLoading = false;\n    });\n    this.form = new FormGroup({\n      'title': new FormControl(null, {\n        validators: [Validators.required, Validators.minLength(3)]\n      }),\n      'content': new FormControl(null, {\n        validators: [Validators.required]\n      }),\n      'image': new FormControl(null, {\n        validators: [Validators.required],\n        asyncValidators: [mimeType]\n      })\n    });\n    this.route.paramMap.subscribe(paraMap => {\n      if (paraMap.has('postId')) {\n        this.mode = 'edit';\n        this.postId = paraMap.get('postId');\n        this.isLoading = true;\n        this.postsService.getPost(this.postId).subscribe(postData => {\n          this.isLoading = false;\n          this.post = {\n            id: postData._id,\n            title: postData.title,\n            content: postData.content,\n            imagePath: postData.imagePath,\n            creator: postData.creator\n          };\n          this.form.setValue({\n            'title': this.post.title,\n            'content': this.post.content,\n            'image': this.post.imagePath\n          });\n        });\n      } else {\n        this.mode = 'create';\n        this.postId = null;\n      }\n    });\n  }\n\n  onImagePicked(event) {\n    const file = event.target.files[0];\n    this.form.patchValue({\n      'image': file\n    });\n    this.form.get('image').updateValueAndValidity();\n    console.log(file);\n    console.log(this.form);\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      this.imagePreview = reader.result;\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  onSavePost() {\n    if (this.form.invalid) {\n      return;\n    }\n\n    this.isLoading = true;\n\n    if (this.mode === 'create') {\n      this.postsService.addPost(this.form.value.title, this.form.value.content, this.form.value.image);\n    } else {\n      this.postsService.updatePost(this.postId, this.form.value.title, this.form.value.content, this.form.value.image);\n    }\n\n    this.form.reset();\n  }\n\n  ngOnDestroy() {\n    this.authStatusSub.unsubscribe();\n  }\n\n}\n\nPostCreateComponent.ɵfac = function PostCreateComponent_Factory(t) {\n  return new (t || PostCreateComponent)(i0.ɵɵdirectiveInject(i1.PostsService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.AuthService));\n};\n\nPostCreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PostCreateComponent,\n  selectors: [[\"app-post-create\"]],\n  decls: 5,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [3, \"formGroup\", \"submit\", 4, \"ngIf\"], [3, \"formGroup\", \"submit\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"title\", \"placeholder\", \"Post Title\"], [\"mat-stroked-button\", \"\", \"type\", \"button\", 3, \"click\"], [\"type\", \"file\", 3, \"change\"], [\"filePicker\", \"\"], [\"class\", \"image-preview\", 4, \"ngIf\"], [\"matInput\", \"\", \"rows\", \"10\", \"formControlName\", \"content\", \"placeholder\", \"Post Content\"], [\"color\", \"accent\", \"mat-button\", \"\", \"type\", \"submit\"], [1, \"image-preview\"], [3, \"src\", \"alt\"]],\n  template: function PostCreateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Create Post Component\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"mat-card\");\n      i0.ɵɵtemplate(3, PostCreateComponent_mat_spinner_3_Template, 1, 0, \"mat-spinner\", 0);\n      i0.ɵɵtemplate(4, PostCreateComponent_form_4_Template, 15, 4, \"form\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n    }\n  },\n  directives: [i4.MatCard, i5.NgIf, i6.MatSpinner, i7.ɵNgNoValidate, i7.NgControlStatusGroup, i7.FormGroupDirective, i8.MatFormField, i9.MatInput, i7.DefaultValueAccessor, i7.NgControlStatus, i7.FormControlName, i10.MatButton, i8.MatError],\n  styles: [\"mat-form-field[_ngcontent-%COMP%]{\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\nmat-spinner[_ngcontent-%COMP%]{\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\ntextarea[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n\\r\\n}\\r\\n\\r\\ninput[type=\\\"file\\\"][_ngcontent-%COMP%] {\\r\\n  visibility: hidden;\\r\\n}\\r\\n\\r\\n.image-preview[_ngcontent-%COMP%]{\\r\\n  height: 5rem;\\r\\n  margin: 1rem 0;\\r\\n}\\r\\n\\r\\n.image-preview[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{\\r\\n  height: 100%;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBvc3QtY3JlYXRlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxXQUFXOztBQUViOztBQUVBO0VBQ0Usa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsWUFBWTtFQUNaLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxZQUFZO0FBQ2QiLCJmaWxlIjoicG9zdC1jcmVhdGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1mb3JtLWZpZWxke1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG5tYXQtc3Bpbm5lcntcclxuICBtYXJnaW46IGF1dG87XHJcbn1cclxuXHJcbnRleHRhcmVhIHtcclxuICB3aWR0aDogMTAwJTtcclxuXHJcbn1cclxuXHJcbmlucHV0W3R5cGU9XCJmaWxlXCJdIHtcclxuICB2aXNpYmlsaXR5OiBoaWRkZW47XHJcbn1cclxuXHJcbi5pbWFnZS1wcmV2aWV3e1xyXG4gIGhlaWdodDogNXJlbTtcclxuICBtYXJnaW46IDFyZW0gMDtcclxufVxyXG5cclxuLmltYWdlLXByZXZpZXcgaW1ne1xyXG4gIGhlaWdodDogMTAwJTtcclxufVxyXG4iXX0= */\"]\n});","map":{"version":3,"sources":["E:\\MEAN Projects\\Blog\\mean-blog-app\\src\\app\\posts\\post-create\\post-create.component.ts","E:\\MEAN Projects\\Blog\\mean-blog-app\\src\\app\\posts\\post-create\\post-create.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { FormControl, FormGroup, NgForm, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute, ParamMap } from \"@angular/router\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { AuthService } from \"src/app/auth/auth.service\";\r\n\r\nimport { Post } from '../post.model';\r\nimport { PostsService } from \"../posts.service\";\r\nimport { mimeType } from \"./mime-type.validator\";\r\n\r\n@Component({\r\n  selector: 'app-post-create',\r\n  templateUrl: './post-create.component.html',\r\n  styleUrls: ['./post-create.component.css']\r\n})\r\nexport class PostCreateComponent implements OnInit, OnDestroy {\r\n  enteredTitle = \"\";\r\n  enteredContent = \"\";\r\n  private mode = 'create';\r\n  private postId: string;\r\n  post: Post;\r\n  isLoading = false;\r\n  form: FormGroup\r\n  imagePreview: string;\r\n  private authStatusSub: Subscription;\r\n\r\n\r\n  constructor(\r\n    public postsService: PostsService,\r\n    public route: ActivatedRoute,\r\n    private authService: AuthService\r\n    ){}\r\n\r\n  ngOnInit(){\r\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(\r\n      authStatus => {\r\n        this.isLoading = false;\r\n      });\r\n    this.form = new FormGroup({\r\n      'title': new FormControl(null, {\r\n        validators: [Validators.required, Validators.minLength(3)]\r\n      }),\r\n      'content': new FormControl(null, { validators: [Validators.required]\r\n      }),\r\n      'image' : new FormControl(null, {\r\n        validators: [Validators.required],\r\n        asyncValidators: [mimeType]\r\n      })\r\n    });\r\n    this.route.paramMap.subscribe((paraMap: ParamMap) => {\r\n      if (paraMap.has('postId')){\r\n        this.mode = 'edit';\r\n        this.postId = paraMap.get('postId');\r\n        this.isLoading = true;\r\n        this.postsService.getPost(this.postId).subscribe(postData => {\r\n          this.isLoading = false;\r\n          this.post = {\r\n            id: postData._id,\r\n            title: postData.title,\r\n            content: postData.content,\r\n            imagePath: postData.imagePath,\r\n            creator:postData.creator\r\n          };\r\n          this.form.setValue({\r\n            'title': this.post.title,\r\n            'content': this.post.content,\r\n            'image': this.post.imagePath\r\n          });\r\n        });\r\n      } else {\r\n        this.mode = 'create';\r\n        this.postId = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  onImagePicked(event: Event){\r\n    const file = (event.target as HTMLInputElement).files[0];\r\n    this.form.patchValue({'image': file});\r\n    this.form.get('image').updateValueAndValidity();\r\n    console.log(file);\r\n    console.log(this.form);\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      this.imagePreview = reader.result as string;\r\n    };\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  onSavePost(){\r\n    if(this.form.invalid){return}\r\n    this.isLoading = true;\r\n    if(this.mode === 'create'){\r\n    this.postsService.addPost(\r\n      this.form.value.title,\r\n      this.form.value.content,\r\n      this.form.value.image\r\n      );\r\n    }\r\n    else {\r\n      this.postsService.updatePost(\r\n        this.postId,\r\n        this.form.value.title,\r\n        this.form.value.content,\r\n        this.form.value.image\r\n      );\r\n    }\r\n    this.form.reset();\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n}\r\n","<h2>Create Post Component</h2>\r\n<mat-card>\r\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n  <form [formGroup]=\"form\" (submit)=\"onSavePost()\" *ngIf=\"!isLoading\">\r\n    <mat-form-field>\r\n      <input\r\n        matInput\r\n        type=\"text\"\r\n        formControlName=\"title\"\r\n        placeholder=\"Post Title\">\r\n      <mat-error *ngIf=\"form.get('title').invalid\">Please enter a post title</mat-error>\r\n    </mat-form-field>\r\n    <div>\r\n      <button mat-stroked-button type=\"button\" (click)=\"filePicker.click()\">Select Image</button>\r\n      <input type=\"file\" #filePicker (change)=\"onImagePicked($event)\">\r\n    </div>\r\n    <div class=\"image-preview\" *ngIf=\"imagePreview !== '' && imagePreview && form.get('image').valid\">\r\n      <img [src]=\"imagePreview\" [alt]=\"form.value.title\">\r\n    </div>\r\n    <mat-form-field>\r\n      <textarea\r\n        matInput\r\n        rows=\"10\"\r\n        formControlName=\"content\"\r\n        placeholder=\"Post Content\"></textarea>\r\n        <mat-error *ngIf=\"form.get('content').invalid\">Please enter some content</mat-error>\r\n    </mat-form-field>\r\n    <button color=\"accent\" mat-button type=\"submit\">Save Post</button>\r\n  </form>\r\n</mat-card>\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}